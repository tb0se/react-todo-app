{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","focusInput","useRef","useEffect","current","focus","handleChange","event","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","type","placeholder","name","onChange","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAmDeA,MAjDf,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAGfC,EAAaC,iBAAO,MAE1BC,qBAAU,WACNF,EAAWG,QAAQC,WAGvB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAMC,OAAOV,QAGpBW,EAAe,SAAAF,GACjBA,EAAMG,iBAENf,EAAMgB,SAAS,CACXC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAGb,OAEI,sBAAMiB,UAAU,YAAYN,SAAUF,EAAtC,SACKd,EAAME,KACP,qCACI,uBAAOqB,KAAK,OAAOC,YAAY,mBAC/BrB,MAAOC,EAAOqB,KAAK,OACnBH,UAAU,kBAAkBI,SAAUf,EACtCgB,IAAKrB,IACL,wBAAQsB,QAASd,EAAcQ,UAAU,mBAAzC,uBAGH,qCACG,uBAAOC,KAAK,OAAOC,YAAY,aAC/BrB,MAAOC,EAAOqB,KAAK,OACnBH,UAAU,aAAaI,SAAUf,EACjCgB,IAAKrB,IACL,wBAAQsB,QAASd,EAAcQ,UAAU,cAAzC,4B,eCJDO,EAjCF,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,WAAe,EAEnChC,mBAAS,CAC7BgB,GAAG,KACHd,MAAM,KAJiD,mBAEpDD,EAFoD,KAE9CgC,EAF8C,KAe3D,OAAGhC,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAMA,EAAMc,SATZ,SAAAb,GACjB8B,EAAW/B,EAAKe,GAAId,GACpB+B,EAAQ,CACJjB,GAAG,KACHd,MAAM,QAQP2B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKf,UAAWc,EAAKE,WAAa,oBAAoB,WAAtD,UACI,qBAAmBV,QAAS,kBAAMG,EAAaK,EAAKnB,KAApD,SACKmB,EAAKf,MADAe,EAAKnB,IAGf,sBAAKK,UAAU,QAAf,UACI,cAAC,IAAD,CAAmBM,QAAS,kBAAMI,EAAWI,EAAKnB,KAAKK,UAAU,gBACjE,cAAC,IAAD,CAAQM,QAAS,kBAAMM,EAAQ,CAACjB,GAAImB,EAAKnB,GAAId,MAAOiC,EAAKf,QACzDC,UAAU,mBAPsDe,OC0BjEE,MAhDf,WAAqB,IAAD,EAEUtC,mBAAS,IAFnB,mBAET6B,EAFS,KAEFU,EAFE,KAsChB,OACI,gCACI,4DACA,cAAC,EAAD,CAAUxB,SArCF,SAACoB,GACb,GAAIA,EAAKf,OAAQ,QAAQoB,KAAKL,EAAKf,MAAnC,CAIA,IAAMqB,EAAQ,CAAIN,GAAJ,mBAAaN,IAC3BU,EAASE,OAgCL,cAAC,EAAD,CAAMZ,MAAOA,EAAOC,aAfP,SAACd,GAClB,IAAI0B,EAAeb,EAAMK,KAAI,SAAAC,GAIzB,OAHGA,EAAKnB,KAAOA,IACXmB,EAAKE,YAAcF,EAAKE,YAErBF,KAGXI,EAASG,IAO2CX,WAtBrC,SAACf,GAChB,IAAM2B,EAAY,YAAId,GAAOe,QAAO,SAAAT,GAAI,OAAIA,EAAKnB,KAAOA,KAExDuB,EAASI,IAoBLX,WA9BW,SAACa,EAAQC,GACpBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAG3CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKb,KAAI,SAAAc,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,eCP5DC,MAXf,WACE,OACE,qBAAK5B,UAAU,iBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,S,MCDR6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e21bd94e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef} from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n    const focusInput = useRef(null);\n\n    useEffect(() =>{\n        focusInput.current.focus();\n    })\n\n    const handleChange = event =>{\n        setInput(event.target.value);\n    }\n\n    const handleSubmit = event =>{\n        event.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 1000),\n            text: input\n        });\n\n        setInput('');\n    }\n\n    return (\n\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit ? (\n            <>\n                <input type=\"text\" placeholder=\"Update your item\" \n                value={input} name=\"text\" \n                className=\"todo-input edit\" onChange={handleChange}\n                ref={focusInput}/>\n                <button onClick={handleSubmit} className=\"todo-button edit\">Update</button>\n            </>) \n            : \n            (<>\n                <input type=\"text\" placeholder=\"Add a Todo\" \n                value={input} name=\"text\" \n                className=\"todo-input\" onChange={handleChange}\n                ref={focusInput}/>\n                <button onClick={handleSubmit} className=\"todo-button\">Add Todo</button>\n            </>)}\n\n        </form>\n            \n    );\n}\n\nexport default TodoForm;\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine} from 'react-icons/ri';\nimport {TiEdit} from 'react-icons/ti';\n\n\nconst Todo = ({todos, completeTodo, removeTodo, updateTodo}) =>{\n\n    const [edit, setEdit] = useState({\n        id:null,\n        value:''\n    });\n\n    const submitUpdate = value =>{\n        updateTodo(edit.id, value);\n        setEdit({\n            id:null,\n            value:''\n        });\n    }\n\n    if(edit.id){\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\n    }\n\n    return todos.map((todo, index) =>(\n        <div className={todo.isComplete ? 'todo-row complete':'todo-row' } key={index}>\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className=\"icons\">\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon' />\n                <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} \n                className='edit-icon'/>\n            </div>\n        </div>\n    ));\n}\n\nexport default Todo\n","import React, {useState} from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nfunction TodoList() {\n\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = (todo)=>{\n        if(!todo.text || /^\\s*$/.test(todo.text)){\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    }\n\n    const updateTodo = (todoId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    }\n\n    const removeTodo = (id) =>{\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removeArr);\n    }\n\n    \n    const completeTodo = (id)=>{\n        let updatedTodos = todos.map(todo =>{\n            if(todo.id === id){\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n\n        setTodos(updatedTodos);\n    }\n\n    return (\n        <div >\n            <h1>What's the plan for today?</h1>\n            <TodoForm onSubmit={addTodo}/>\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} \n            updateTodo={updateTodo}/>\n        </div>\n    )\n}\n\nexport default TodoList\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-container\">\n      <div className=\"todo-app\">\n        <TodoList/>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}